class e{modules;urls;beingProcess;constructor(){this.modules={},this.urls=new Set,this.beingProcess=new Set}addModule(e){this.urls.has(e)||this.beingProcess.add(async function(e="https://raw.githubusercontent.com/Srabutdotcom/aid/master/whatis/whatis.js"){const s=await fetch(e);if(!s.ok)return void console.error("Failed to fetch the file");const t=await s.blob();return await import(URL.createObjectURL(new Blob([t],{type:"text/javascript"})))}(e).then((s=>{this.modules={...this.modules,...s},this.beingProcess.delete(e)})).catch((e=>{console.log(e.message)})))}async getModule(e){return this.beingProcess.size?(await Promise.all([...this.beingProcess]),this.modules[e]):this.modules[e]}}const s=new e;export{e as Module,s as modules};
